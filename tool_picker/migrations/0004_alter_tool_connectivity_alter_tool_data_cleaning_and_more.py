# Generated by Django 5.0 on 2023-12-12 14:21

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('tool_picker', '0003_delete_criteria_tool_biometrics_tool_case_management_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='tool',
            name='connectivity',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, message='Connectivity cannot be less than 0'), django.core.validators.MaxValueValidator(4, message='Connectivity cannot be greater than 4')]),
        ),
        migrations.AlterField(
            model_name='tool',
            name='data_cleaning',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, message='Data cleaning cannot be less than 0'), django.core.validators.MaxValueValidator(4, message='Data cleaning cannot be greater than 4')]),
        ),
        migrations.AlterField(
            model_name='tool',
            name='data_management_policies',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, message='Data management policies cannot be less than 0'), django.core.validators.MaxValueValidator(4, message='Data management policies cannot be greater than 4')]),
        ),
        migrations.AlterField(
            model_name='tool',
            name='data_security',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, message='Data security cannot be less than 0'), django.core.validators.MaxValueValidator(4, message='Data security cannot be greater than 4')]),
        ),
        migrations.AlterField(
            model_name='tool',
            name='data_viz',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, message='Data visualization cannot be less than 0'), django.core.validators.MaxValueValidator(4, message='Data visualization cannot be greater than 4')]),
        ),
        migrations.AlterField(
            model_name='tool',
            name='interoperability',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, message='Interoperability cannot be less than 0'), django.core.validators.MaxValueValidator(4, message='Interoperability cannot be greater than 4')]),
        ),
        migrations.AlterField(
            model_name='tool',
            name='localization',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, message='Localization cannot be less than 0'), django.core.validators.MaxValueValidator(4, message='Localization cannot be greater than 4')]),
        ),
        migrations.AlterField(
            model_name='tool',
            name='maintenance_complexity',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, message='Maintenance complexity cannot be less than 0'), django.core.validators.MaxValueValidator(4, message='Maintenance complexity cannot be greater than 4')]),
        ),
        migrations.AlterField(
            model_name='tool',
            name='performance',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, message='Performance cannot be less than 0'), django.core.validators.MaxValueValidator(4, message='Performance cannot be greater than 4')]),
        ),
        migrations.AlterField(
            model_name='tool',
            name='setup_complexity',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, message='Setup complexity cannot be less than 0'), django.core.validators.MaxValueValidator(4, message='Setup complexity cannot be greater than 4')]),
        ),
        migrations.AlterField(
            model_name='tool',
            name='setup_speed',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, message='Setup speed cannot be less than 0'), django.core.validators.MaxValueValidator(4, message='Setup speed cannot be greater than 4')]),
        ),
        migrations.AlterField(
            model_name='tool',
            name='training_and_support',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, message='Training and support cannot be less than 0'), django.core.validators.MaxValueValidator(4, message='Training and support cannot be greater than 4')]),
        ),
        migrations.AlterField(
            model_name='tool',
            name='transition',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, message='Transition cannot be less than 0'), django.core.validators.MaxValueValidator(4, message='Transition cannot be greater than 4')]),
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
